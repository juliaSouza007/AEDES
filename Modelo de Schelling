//inicializa a tela
int[][] grid;


int n = 100;

void setup () {
    //define o tamanho da tela
    size(800,800);
    //vezes que o draw é executado por segundo
    frameRate(60);
    
    grid = criaGrid();
}

int[][] criaGrid(){
  int[][] m = new int[n][n];
  
  //é a inicialização do jogo, ecolhendo a cor dos quadrados na tela
  for(int i = 0; i < n; i++){
    for(int j = 0; j < n; j++){
      m[i][j] = ((int)random(3));
    }
  }
  //retorna a matriz m
  return m;
}

void mostraGrid(){
  float l = width/(float)n;
  float h = height/(float)n;
  
  for(int i = 0; i < n; i++){
    for(int j = 0; j < n; j++){
      stroke(200); //cor da linha de contorno do quadradinho
      if(grid[i][j] == 0)fill(255); //se for 0, preencher a celula com a cor branca
      if(grid[i][j] == 1)fill(#16AA0F); //se for 1, preencher com verde //outra opcao: if(grid[i][j] == 1)fill(0,255,0);
      if(grid[i][j] == 2)fill(#140FAA); //se for 1, preencher com azul //outra opcao: if(grid[i][j] == 1)fill(0,0,255);
      rect(j*l, i*h, l, h); //tamanho do quadradinho
     }
  }
  
}

int vizinhosIguais(int i, int j){
  int soma = 0;
  for(int ki = -1; ki < 2; ki++){              //avalia os valores de -1 ate 2 envolta de UMA celula, na linha
    for(int kj = -1; kj < 2; kj++){            //avalia os valores de -1 ate 2 envolta de UMA celula, na coluna
      if (grid[(n+i+ki)%n][(n+j+kj)%n] == grid[i][j]) soma++;      //% = resto da divisao
    }
  }
  
  return soma;
}

void atualizaGrid(){
  int[][] novoGrid = new int[n][n];
  
  for(int i = 0; i < n; i++){
    for(int j = 0; j < n; j++){
      int viz = vizinhosIguais(i,j);
      
      while (true) {
        i = (int)random(n);
        j = (int)random(n);
        
        if (grid[i][j] == 0) continue;
        
          if(grid[i][j] == 1){
            if(viz < 2 || viz > 3) novoGrid[i][j] = 0;
            else novoGrid[i][j] = 1;
          }
          else{
            if(viz == 3) novoGrid[i][j] = 1;
            else novoGrid[i][j] = 0;
          }
      }
    }
  }
  
  grid = novoGrid;
}

void draw(){
  mostraGrid();
  atualizaGrid();
  
  if(mousePressed) grid = criaGrid();
}
